<Window x:Class="NHM.Wpf.Views.BenchmarkWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NHM.Wpf"
        xmlns:viewModels="clr-namespace:NHM.Wpf.ViewModels"
        xmlns:controls="clr-namespace:NHM.Wpf.Views.Settings.Controls"
        xmlns:converters="clr-namespace:NHM.Wpf.Converters"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Icon="../Resources/logo.ico"
        Height="600" Width="900"
        Closing="Window_Closing"
        Loaded="Window_Loaded">
    <Window.DataContext>
        <viewModels:BenchmarkViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.Resources>
            <converters:EnumToBoolConverter x:Key="EnumConv" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ListView Margin="10" 
                  ItemsSource="{Binding Devices}" 
                  SelectedItem="{Binding SelectedDev}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Enabled">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Enabled}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding FullName}" />
                </GridView>
            </ListView.View>
        </ListView>

        <ListView Margin="10" 
                  Grid.Row="1" 
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  ItemsSource="{Binding SelectedAlgos}" 
                  SelectedItem="{Binding SelectedAlgo}" 
                  IsEnabled="{Binding AlgosEnabled, Mode=OneWay}"
                  ContextMenuOpening="ContextMenu_OnOpening">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Enabled">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Algo.Enabled}" 
                                          IsEnabled="{Binding DataContext.NotInBenchmark, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Algo.AlgorithmName}" />
                    <GridViewColumn Header="Miner" DisplayMemberBinding="{Binding Algo.MinerBaseTypeName}" />
                    <GridViewColumn Header="Speed" DisplayMemberBinding="{Binding StatusString}" />
                    <GridViewColumn Header="Ratio (BTC/GH/Day)" DisplayMemberBinding="{Binding Algo.CurPayingRatio}" />
                    <GridViewColumn Header="Profit (BTC/Day)" DisplayMemberBinding="{Binding Algo.CurPayingRateStr}" />
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Enable All Algorithms" Command="{Binding EnableAllCommand}" />
                    <MenuItem Header="Disable All Algorithms" Command="{Binding DisableAllCommand}" />
                    <MenuItem Header="Enable Only This" Command="{Binding EnableOnlyThisCommand}" />
                    <MenuItem Header="Enable Benchmarked Only" Command="{Binding EnableBenchedCommand}" />
                    <Separator />
                    <MenuItem Header="Clear Algorithm Speed" Command="{Binding ClearSpeedsCommand}" />
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>

        <StackPanel Grid.Column="1" Grid.Row="0" Margin="10" IsEnabled="{Binding NotInBenchmark}">
            <RadioButton IsChecked="{Binding PerfType, Converter={StaticResource EnumConv}, ConverterParameter=Quick}">
                _Quick (can be inaccurate)
            </RadioButton>
            <RadioButton IsChecked="{Binding PerfType, Converter={StaticResource EnumConv}, ConverterParameter=Standard}">
                _Standard
            </RadioButton>
            <RadioButton IsChecked="{Binding PerfType, Converter={StaticResource EnumConv}, ConverterParameter=Precise}">
                _Precise (will take longer)
            </RadioButton>
        </StackPanel>

        <Expander Grid.Column="2"
                  Grid.Row="0"
                  Grid.RowSpan="3"
                  ExpandDirection="Right"
                  Margin="0">
            <ScrollViewer VerticalScrollBarVisibility="Auto" IsEnabled="{Binding SideBarEnabled}">
                <StackPanel Width="210">
                    <controls:SettingsContainer Title="Benchmark Speed (H/s):"
                                               Description="Fine tune algorithm ratios by manually settings benchmark speeds for each algorithm.">
                        <TextBox Text="{Binding SelectedAlgo.Algo.BenchmarkSpeed}" />
                    </controls:SettingsContainer>
                    <controls:SettingsContainer Title="Secondary Benchmark Speed (H/s):"
                                               Description="Speed for the secondary algorithm when using dual mining."
                                               IsEnabled="{Binding SelectedAlgo.Algo.IsDual}">
                        <TextBox Text="{Binding SelectedAlgo.Algo.SecondaryBenchmarkSpeed}" />
                    </controls:SettingsContainer>
                    <controls:SettingsContainer Title="Power Usage (W):"
                                               Description="The power used by this algorithm in Watts\nAlgorithm profits will deduct power costs when this and electricity cost are above 0.">
                        <TextBox Text="{Binding SelectedAlgo.Algo.PowerUsage}" />
                    </controls:SettingsContainer>
                    <controls:SettingsContainer Title="Extra Launch Parameters:"
                                               Description="Additional launch parameters when launching miner and this algorithm.">
                        <TextBox TextWrapping="Wrap" Text="{Binding SelectedAlgo.Algo.ExtraLaunchParameters}" />
                    </controls:SettingsContainer>
                </StackPanel>
            </ScrollViewer>
        </Expander>

        <Grid Grid.Row="2"
              Grid.Column="0"
              Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Margin="10" IsEnabled="{Binding NotInBenchmark}">
                <RadioButton IsChecked="{Binding AlgoSelection, Converter={StaticResource EnumConv}, ConverterParameter=SelectedUnbenchmarkedAlgorithms}">
                    Benchmark Selected Unbenchmarked Algorithms
                </RadioButton>
                <RadioButton IsChecked="{Binding AlgoSelection, Converter={StaticResource EnumConv}, ConverterParameter=ReBecnhSelectedAlgorithms}">
                    Benchmark All Selected Algorithms
                </RadioButton>
            </StackPanel>
            <CheckBox Grid.Column="1" Margin="0,10,0,0" IsChecked="{Binding StartMiningAfterBench}">Start mining after benchmark</CheckBox>
        </Grid>

        <Grid Grid.Row="3"
              Grid.Column="0"
              Grid.ColumnSpan="3"
              Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <GroupBox Header="Benchmark progress status:" Grid.RowSpan="2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="5,5,0,5">Benchmark step (</TextBlock>
                    <TextBlock Margin="0,5" Text="{Binding BenchesCompleted}" />
                    <TextBlock Margin="0,5">/</TextBlock>
                    <TextBlock Margin="0,5" Text="{Binding BenchesPending}" />
                    <TextBlock Margin="0,5,5,5">)</TextBlock>
                    <ProgressBar Width="220" Value="{Binding Progress, Mode=OneWay}" />
                </StackPanel>
            </GroupBox>

            <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0">
                <Button Width="80" Margin="10,0" Click="CloseButton_OnClick" IsEnabled="{Binding NotInBenchmark}">_Close</Button>
                <Button Width="120" Click="StartStopButton_OnClick">
                    <TextBlock Text="{Binding StartStopButtonLabel}" />
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
